name: Fullstack CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build and push the backend Docker image
    - name: Build and push Backend Docker image
      run: |
        docker build -t kelomo2502/backend:latest -f backend/Dockerfile .
        docker push kelomo2502/backend:latest

    # Step 5: Build and push the frontend Docker image
    - name: Build and push Frontend Docker image
      run: |
        docker build -t kelomo2502/frontend:latest -f frontend/Dockerfile .
        docker push kelomo2502/frontend:latest

    # Step 6: Install Minikube
    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    # Step 7: Install kubectl
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    # Step 8: Start Minikube and configure kubectl
    - name: Start Minikube
      run: |
        minikube start
        mkdir -p $HOME/.kube
        cp $HOME/.minikube/profiles/minikube/config.json $HOME/.kube/config
        kubectl config use-context minikube

    # Step 9: Apply the Kubernetes configurations
    - name: Deploy to Minikube Kubernetes
      run: |
        kubectl apply -f kubernetes/mongo-statefulset.yaml
        kubectl apply -f kubernetes/mongo-service.yaml
        kubectl apply -f kubernetes/backend.yaml
        kubectl apply -f kubernetes/frontend.yaml

    # Step 10: Check Rollout Status
    - name: Check Rollout Status
      run: |
        kubectl rollout status deployment/frontend
        kubectl rollout status deployment/backend
